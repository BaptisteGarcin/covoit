{"version":3,"sources":["components/FloatingButton.js","components/Passengers.js","components/DatePicker.js","containers/PageNewCovoit.js","components/DrivingHistory.js","containers/PageHistory.js","containers/PageNextDriver.js","components/Wheel.js","containers/App.js","index.js"],"names":["FloatingButton","style","backgroundColor","this","props","color","className","onClick","text","React","Component","Passengers","state","passengers","selectedPassengers","Map","name","e","item","target","value","isChecked","checked","setState","prevState","set","removeFalsy","forEach","v","k","push","onChange","map","index","key","shortid","generate","handleClick","type","get","handleChange","DatePicker","event","PageNewCovoit","textAlign","setPassengers","date","setDate","DrivingHistory","overflowX","covoits","covoit","driver","passenger","moment","locale","format","PageHistory","PageNextDriver","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","clientId","scopes","firebase","initializeApp","newCovoit","app","functions","httpsCallable","getAllCovoits","uiConfig","signInFlow","signInOptions","provider","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","App","isSignedIn","isNewCovoit","undefined","isFindDriver","unregisterAuthObserver","onAuthStateChanged","user","currentUser","displayName","toLowerCase","then","catch","err","console","error","res","data","save","driverOccurences","filter","group","length","every","includes","reduce","prev","curr","alert","JSON","stringify","spin","id","signOut","renderMain","firebaseAuth","handleNewCovoit","handleNextDriver","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da575f09.chunk.js","sourcesContent":["import React from \"react\";\nimport './FloatingButton.scss';\n\nexport default class FloatingButton extends React.Component {\n    render() {\n        return (\n            <div\n                style={{backgroundColor: `${this.props.color}`}}\n                 className=\"float\"\n                 onClick={this.props.onClick}\n                 >\n                {this.props.text}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport './Passengers.scss'\nimport shortid from \"shortid\";\n\nexport default class Passengers extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            passengers: [\"fedy salah\", \"florian pires\", \"lucille moise\", \"florian leblanc\", \"baptiste garcin\"],\n            selectedPassengers: new Map()\n        };\n    }\n\n    handleClick(name) {\n        //TODO : enlarge radio button to the div\n        //this.props.onChange(this.props.id, val);\n    }\n\n    handleChange(e) {\n        const item = e.target.value;\n        const isChecked = e.target.checked;\n        this.setState(prevState => ({selectedPassengers: prevState.selectedPassengers.set(item, isChecked)}),\n            () => {\n                let removeFalsy = [];\n                this.state.selectedPassengers.forEach((v, k) => {\n                    if(v)\n                        removeFalsy.push(k);\n                })\n                this.props.onChange(removeFalsy)\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"flexRow\">\n                {this.state.passengers.map((value, index) =>{\n                  return <div className=\"passenger\" key={shortid.generate()} onClick={() => this.handleClick(value)}>\n                      <div className=\"flexRow\">\n                          <p>{value}</p>\n                      </div>\n                      <div className=\"flexRow\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"passenger\"\n                            value={value}\n                            checked={this.state.selectedPassengers.get(value) ? this.state.selectedPassengers.get(value) : false}\n                            onChange={(e) => this.handleChange(e)}\n                        />\n                      </div>\n                  </div>\n                })}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class DatePicker extends React.Component {\n    render() {\n        return (\n            <div className=\"flexRow\">\n                <input type=\"date\" onChange={event => this.props.onChange(event.target.value) }/>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport Passengers from \"../components/Passengers\";\nimport DatePicker from \"../components/DatePicker\";\n\nimport './PageNewCovoit.scss'\n\nexport default class PageNewCovoit extends React.Component {\n    render() {\n        return (\n            <div className=\"flexColumn\">\n                <p style={{textAlign: 'center'}}>Select only the people that you drove</p>\n                <Passengers onChange={(selectedPassengers) => this.props.setPassengers(selectedPassengers)}/>\n                <DatePicker onChange={(date) => this.props.setDate(date)}/>\n            </div>\n        );\n    }\n}\n\n\n","import React from \"react\";\nimport shortid from 'shortid';\nimport moment from 'moment';\nimport 'moment/locale/fr'\n\nimport './DrivingHistory.scss';\n\nexport default class DrivingHistory extends React.Component {\n    render() {\n        return (\n            <div style={{overflowX: 'auto'}}>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>Driver</th>\n                        <th>Passengers</th>\n                        <th>Date</th>\n                    </tr>\n                    {this.props.covoits.map((covoit, index) => {\n                      return <tr key={shortid.generate()}>\n                          <td>{covoit.driver}</td>\n                          <td>\n                          {covoit.passengers.map((passenger, index) => {\n                             return <p key={shortid.generate()}>{passenger}</p>\n                          })}\n                          </td>\n                          <td>{moment(covoit.date).locale('fr').format('dddd LL')}</td>\n                      </tr>\n                    })}\n                </tbody>\n            </table>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport DrivingHistory from \"../components/DrivingHistory\";\n\nexport default class PageHistory extends React.Component {\n    render() {\n        return (\n            <DrivingHistory covoits={this.props.covoits}/>\n        );\n    }\n}\n","import React from \"react\";\n\nimport Passengers from \"../components/Passengers\";\nimport Wheel from \"../components/Wheel\";\n\nexport default class PageNextDriver extends React.Component {\n    render() {\n        return (\n            <div className=\"flexColumn\">\n                <p style={{textAlign: 'center'}}>Select all the people that will share the car (including you)</p>\n                <Passengers onChange={(selectedPassengers) => this.props.setPassengers(selectedPassengers)}/>\n            </div>\n        );\n    }\n}\n\n\n","import React from \"react\";\n\nexport default class Wheel extends React.Component {\n    render() {\n        return (\n            <div>\n                <p>The next driver should be : </p>\n            </div>\n        );\n    }\n}\n","// Import FirebaseAuth and firebase.\nimport React from \"react\";\nimport firebase from 'firebase/app'\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\n\nimport '../global.scss'\n\nimport FloatingButton from \"../components/FloatingButton\";\nimport PageNewCovoit from \"./PageNewCovoit\";\nimport PageHistory from \"./PageHistory\";\n\nimport 'firebase/auth';        // for authentication\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/functions';\nimport PageNextDriver from \"./PageNextDriver\";\n\n// Configure Firebase.\nconst config = {\n    apiKey: \"AIzaSyBjsGZ5tLUZN9xlMVRoRsxLc0CjvOaL8oI\",\n    authDomain: \"covoit-84ccd.firebaseapp.com\",\n    databaseURL: \"https://covoit-84ccd.firebaseio.com\",\n    projectId: \"covoit-84ccd\",\n    storageBucket: \"\",\n    messagingSenderId: \"913586747610\",\n    appId: \"1:913586747610:web:0c6a504f06e498b42f4de3\",\n    measurementId: \"G-589J4F6WQJ\",\n    clientId:\n        \"424398156280-ia1vh1s44b7qqvm5kk61a5gako72kvb9.apps.googleusercontent.com\",\n    scopes: [\n        \"email\",\n        \"profile\",\n        \"openid\"\n    ]\n};\n\nfirebase.initializeApp(config);\n\nconst newCovoit = firebase.app().functions('europe-west2').httpsCallable('newCovoit');\nconst getAllCovoits = firebase.app().functions('europe-west2').httpsCallable('getAllCovoits');\n\n// Configure FirebaseUI.\nconst uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    //signInSuccessUrl: \"/signedIn\",\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n        {\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            scopes: config.scopes\n        },\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n        signInSuccessWithAuthResult: () => false\n    }\n};\n\nclass App extends React.Component {\n    state = {\n        isSignedIn: false,\n        isNewCovoit: false,\n        selectedPassengers: [],\n        date: undefined,\n        covoits: [],\n        isFindDriver: false\n    };\n\n    componentDidMount() {\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({isSignedIn: true});\n                this.getAllCovoits()\n            } else {\n                this.setState({isSignedIn: false});\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unregisterAuthObserver();\n    }\n\n    save(){\n        const covoit = {\n            driver: firebase.auth().currentUser.displayName.toLowerCase(),\n            passengers: this.state.selectedPassengers,\n            date: this.state.date\n        };\n\n        newCovoit(covoit).then(() => {\n                this.setState({isNewCovoit: false, covoits: [covoit, ...this.state.covoits]})\n            }).catch(err => {\n                console.error('Error adding document', err);\n            });\n    }\n\n    getAllCovoits() {\n        getAllCovoits()\n            .then(res => {\n                this.setState({covoits : res.data})\n            });\n    }\n\n    setPassengers(selectedPassengers){\n        this.setState({selectedPassengers: [...selectedPassengers]})\n    }\n\n    setDate(date) {\n        this.setState({date: date})\n    }\n\n    handleNewCovoit(){\n        if(this.state.isNewCovoit){\n            this.save()\n        }\n        else\n            this.setState({isNewCovoit : true})\n    }\n\n    spin(){\n        const driverOccurences = this.state.covoits.filter(covoit => {\n            const group = [...covoit.passengers, covoit.driver]\n            if(group.length === this.state.selectedPassengers.length){\n                const areEqual = group.every(value => this.state.selectedPassengers.includes(value))\n                if(areEqual)\n                    return true;\n                else\n                    return false;\n            }\n            return false;\n        }).map(covoit => covoit.driver)\n          .reduce((prev, curr) => (prev[curr] = ++prev[curr] || 1, prev), {})\n\n       alert(JSON.stringify(driverOccurences))\n    }\n\n    handleNextDriver() {\n        if (this.state.isFindDriver) {\n            this.spin()\n        } else\n            this.setState({isFindDriver: true})\n    }\n\n    renderMain() {\n        if (this.state.isNewCovoit && !this.state.isFindDriver)\n                return <PageNewCovoit\n                    setPassengers={(data) => this.setPassengers(data)}\n                    setDate={(data) => this.setDate(data)}\n                />;\n        else if (!this.state.isNewCovoit && this.state.isFindDriver)\n            return <PageNextDriver setPassengers={(data) => this.setPassengers(data)}/>;\n        else\n            return <PageHistory covoits={this.state.covoits}/>\n    }\n\n    render() {\n        return (<div className=\"grid\">\n            <div id=\"header\">\n                <h1>Covoit App</h1>\n            </div>\n            <div id=\"headerRight\">\n                {this.state.isNewCovoit &&\n                            <button\n                                onClick={() => firebase.auth().signOut()}\n                            >\n                                Sign-out\n                            </button>\n                }\n            </div>\n            <div id=\"mainArticle\">\n                {this.state.isSignedIn ?\n                    this.renderMain()\n                 :\n                    <StyledFirebaseAuth\n                        uiConfig={uiConfig}\n                        firebaseAuth={firebase.auth()}\n                    />\n                }\n            </div>\n            <div id=\"mainNav\"></div>\n            <div id=\"siteAds\"></div>\n            <footer id=\"pageFooter\">\n                {this.state.isSignedIn &&\n                    <div className=\"flexRow\">\n                        {!this.state.isFindDriver &&\n                            <FloatingButton\n                            color='#0C9'\n                            text={`${this.state.isNewCovoit ? \"Valider\" : \"+\"} `}\n                                    onClick={(data) => {this.handleNewCovoit(data)}}\n                            />\n                        }\n                        {!this.state.isNewCovoit &&\n                            <FloatingButton\n                                color='#314acc'\n                                text={`${this.state.isFindDriver ? \"Spin\" : \"Driver?\"} `}\n                                onClick={(data) => {this.handleNextDriver()}}\n                            />\n                        }\n                    </div>\n                }\n            </footer>\n      </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}